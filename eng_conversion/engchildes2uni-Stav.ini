;;;Configuration file to convert Stanford Typed Dependencies to Universal Dependencies
;;;Note not all aspects of universal dependencies are covered, especially handling
;;;of the 'name' label

;composite labels
func=/.*/;func=/^MNEG-ROOT/	#1>#2	#2:func=MNEG
func=/.*/;func=/^AAGR-ROOT/	#1>#2	#2:func=AAGR
func=/^MNEG-ROOT/	none	#1:func=ROOT
func=/^AAGR-ROOT/	none	#1:func=ROOT
func=/^MDET-APREP/	none	#1:func=APREP

;determiners
func=/^MDET/	none	#1:func=det:def
func=/^MQUANT/&pos=/^qn/	none	#1:func=det
func=/^MQUANT/&pos=/^det/	none	#1:func=det
func=/^MQUANT/&pos=/^X/	none	#1:func=det
func=/^MQUANT/&pos=/^adv/	none	#1:func=advmod
func=/^MQUANT/&pos=/^num/	none	#1:func=nummod
func=/^MQUANT/&pos=/^que/	none	#1:func=det

;modifiers
func=/^MNEG/	none	#1:func=neg
func=/^MADV/	none	#1:func=advmod
func=/^MNOUN/	none	#1:func=nmod:smixut
func=/^MADJ/&pos=/^pro:dist/	none	#1:func=det
func=/^MADJ/	none	#1:func=amod

;subordinating conjunctions
func=/.*/;func=/^MSUB/;func=/^RELCL/	#1>#2>#3	#3>#2;#2:func=mark;#3:func=acl:relcl;#1>#3
func=/.*/;func=/^MSUB/;func=/^SUBCL/	#1>#2>#3	#3>#2;#2:func=mark;#3:func=advcl;#1>#3
func=/.*/;func=/^ANONAGR/;func=/^SUBCL/	#1>#2>#3	#3>#2;#2:func=mark;#3:func=ccomp;#1>#3
func=/.*/;pos=/^conj:subor/;func=/^SUBCL/	#1>#2>#3	#3>#2;#2:func=mark;#3:func=ccomp;#1>#3
func=/.*/;pos=/^adv/;func=/^SUBCL/	#1>#2>#3	#3>#2;#2:func=advmod;#3:func=ccomp;#1>#3

;prepositional phrases
func=/.*/;func=/^ANONAGR/&pos=/^acc/;func=/^APREP/	#1>#2>#3	#3>#2;#2:func=case;#3:func=dobj;#1>#3
func=/.*/;func=/^ANONAGR/&pos=/^prep/;func=/^APREP/	#1>#2>#3	#3>#2;#2:func=case;#3:func=iobj;#1>#3
func=/.*/;func=/^.*/;func=/^APREP/	#1>#2>#3	#3>#2;#3:func=%2;#2:func=case;#1>#3
func=/.*/;func=/^MPRE/;func=/^APREP/	#1>#2>#3	#3>#2;#2:func=case;#3:func=nmod;#1>#3
func=/^MPRE/	none	#1:func=nmod
func=/.*/;func=/^MPOSS/;func=/^APREP/	#1>#2>#3	#3>#2;#2:func=case:gen;#3:func=nmod;#1>#3

;subordinating conjunctions & prepositional phrases as roots
func=/^ROOT/;func=/^APREP/	#1>#2	#2>#1;#2:func=root;#1:func=case
func=/^ROOT/;func=/^SUBCL/	#1>#2	#2>#1;#2:func=root;#1:func=mark
func=/^ROOT/;func=/^RELCL/	#1>#2	#2>#1;#2:func=root;#1:func=mark

;subjects
func=/.*/;func=/^AAGR/	#1>#2	#2:func=nsubj
func=/.*/;func=/^ANONAGR/	#1>#2	#2:func=dobj
func=/.*/;func=/^AEXS/	#1>#2	#2:func=nsubj

;infinitives
func=/.*/;func=/^AINF/	#1>#2	#2:func=xcomp

;vocatives
func=/^VOC/	none	#1:func=vocative
func=/^COM/	none	#1:func=discourse

;serial verbs
func=/^SRL/	none	#1:func=aux

;other. not sure about REP --> parataxis
func=/^UNK/	none	#1:func=dep
func=/^XAGR/	none	#1:func=nsubj
func=/^PUNCT/	none	#1:func=punct
func=/^EXROOT/	none	#1:func=parataxis
func=/^REP/	none	#1:func=parataxis
func=/^ROOT/	none	#1:func=root
func=/^COORD/	none	#1:func=conj



;POS tags
pos=/^!/	none	#1:pos=PUNCT
pos=/^?/	none	#1:pos=PUNCT
pos=/^./	none	#1:pos=PUNCT
pos=/^<quotation next line>	none	#1:pos=PUNCT
; added punctuations
pos=/^cm/	none	#1:pos=PUNCT
pos=/^beg/	none	#1:pos=PUNCT
pos=/^bq/	none	#1:pos=PUNCT
pos=/^eq/	none	#1:pos=PUNCT
; should find out what is the meaning of it.. looks like a comma too
pos=/^end/	none	#1:pos=PUNCT
;
pos=/^adj/	none	#1:pos=ADJ
pos=/^adv/	none	#1:pos=ADV
pos=/^adv:tem/	none	#1:pos=ADV
pos=/^adv:wh/	none	#1:pos=ADV
;determiners
pos=/^art/	none	#1:pos=DET
pos=/^det/	none	#1:pos=DET
pos=/^qn/	none	#1:pos=DET
;Nouns
pos=/^chi/	none	#1:pos=NOUN
pos=/^n/	none	#1:pos=NOUN
;it looks like invented nouns:
pos=/^test/	none	#1:pos=NOUN
pos=/^n:let/	none	#1:pos=NOUN
pos=/^n:pt/	none	#1:pos=NOUN
pos=/^pro:indef/	none	#1:pos=NOUN
pos=/^wplay/	none	#1:pos=NOUN
; General rules for verbs that could be AUX or VERB in UD
pos=/^mod/	none	#1:pos=AUX
pos=/^mod:aux/	none	#1:pos=AUX
pos=/^aux/	none	#1:pos=AUX
pos=/^cop/	none	#1:pos=VERB
pos=/^v/	none	#1:pos=VERB
;Specific conditions to fix tagging mistakes
;If a be&.. is followed by PRESP or PASTP => AUX (it could have words in the middle - should be improved!)
pos=/^VERB/&text=/^be/;text=/.*-PRESP/	#1.#2	#1:pos=AUX
pos=/^VERB/&text=/^be/;text=/.*-PASTP/	#1.#2	#1:pos=AUX
;If an AUX is followed by ADJ or NOUN => it is probably a VERB (copula)
pos=/^AUX/;pos=/^ADJ/	#1.#2	#1:pos=VERB
pos=/^AUX/;pos=/^NOUN/	#1.#2	#1:pos=VERB
;
pos=/^co/	none	#1:pos=INTJ
; conj can be CONJ (and, or, but) or SCONJ (that, if, while, like). when - ADV, after ... !! Needs more thought
; Write conditions for that either by words or by some other features
; pos=/^conj/	none	#1:pos=DISCOURSE
pos=/^coord/	none	#1:pos=CONJ
pos=/^det:num/	none	#1:pos=NUM
pos=/^det:wh/	none	#1:pos=PRON
pos=/^inf/	none	#1:pos=PART
; I need to understand this choice:
pos=/^meta/	none	#1:pos=X
;mispronounced verb?
pos=/^bab/	none	#1:pos=VERB
; common tagging mistake: n:gerund when it is supposed to be Verb in presp
; condition for some instances of the mistake:
pos=/^aux/;pos=/^n:gerund/	#1.#2	#2:pos=VERB
pos=/^n:gerund/	none	#1:pos=NOUN
;
pos=/^n:prop/	none	#1:pos=PROPN
pos=/^neg/	none	#1:pos=PART
pos=/^on/	none	#1:pos=INTJ
pos=/^part/	none	#1:pos=VERB
;common tagging mistake: poss instead of aux. fixing:
pos=/^poss/;text=/.*PRESP/	#1.#2	#1:pos=AUX
pos=/^poss/;text=/.*PASTP/	#1.#2	#1:pos=AUX
;common tagging mistake: poss instead of VERB. fixing:
pos=/^poss/;pos=/^DET/	#1.#2	#1:pos=VERB
# what is left is really poss
pos=/^poss/	none	#1:pos=PART
; post could be too (ADV) else (ADJ or ADV), both (only in some places)..
pos=/^post/	none	#1:pos=ADV
;
pos=/^prep/	none	#1:pos=ADP
pos=/^pro/	none	#1:pos=PRON
pos=/^pro:dem/	none	#1:pos=PRON
pos=/^pro:exist/	none	#1:pos=PRON
;
pos=/^pro:obj/	none	#1:pos=PRON
pos=/^pro:poss/	none	#1:pos=PRON
pos=/^pro:poss:det/	none	#1:pos=PRON
pos=/^pro:refl/	none	#1:pos=PRON
pos=/^pro:sub/	none	#1:pos=PRON
pos=/^pro:wh/	none	#1:pos=PRON
; continue from here
pos=/^rel/	none	#1:pos=SCONJ
pos=/^rel/&text=/^where/	none	#1:pos=ADV
pos=/^rel/&text=/^when/	none	#1:pos=ADV
pos=/^=+.../	none	#1:pos=PUNCT
pos=/^=+/./	none	#1:pos=PUNCT
